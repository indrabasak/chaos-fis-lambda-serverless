Resources:
  HelloLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${self:service}-hello-lambda-role-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Tags:
        - Key: 'adsk:moniker'
          Value: ${self:custom.config.moniker}

      Policies:
        - PolicyName: ${self:service}-hello-logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowListingConfigLocation
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - 'Fn::Join':
                      - ':'
                      - - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/${self:service}-hello:*:*'

        - PolicyName: ${self:service}-hello-s3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowReadingObjectFromConfigLocation
                Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !Sub 'arn:aws:s3:::${self:service}-config-${AWS::Region}-${AWS::AccountId}'
                Condition:
                  StringLike:
                    s3:prefix:
                      - 'FisConfigs/*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${self:service}-config-${AWS::Region}-${AWS::AccountId}/FisConfigs/*'

